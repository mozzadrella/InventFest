---
title: Projects
published: true
---

# STEAM Week 1: Tinkering Offers Many Ways to Learn Logic

The following passage is from [Epistemological Pluralism](http://www.papert.org/articles/EpistemologicalPluralism.html) by Seymour Papert and Sherry Turkle. They explore a different way of learning programming--through creative thinking. 

After reading the passage and the article, answer:

1. How does littleBits allow you to change your classroom practice?
2. What differences have you noticed in your classroom community since you started using littleBits?
3. How do students describe working with the bits? Is it like Lisa or Robin, mentioned below?

Consider Lisa, 18, a first-year Harvard student in an introductory programming course. Lisa had feared that she would find the course difficult because she is a poet, "good with words, not numbers." But after years of scorning teachers who had insisted that mathematics is a language, the computer has made Lisa ready to reconsider the proposition, and with it her characterization of herself as someone "bad at math." Lisa started well, surprised to find herself easily in command of the course material. But as the term progressed she reluctantly decided that she "had to be a different kind of person with the machine." She could no longer resist a pressure to think in ways that were not her own. She was in trouble, but her difficulty expressed a strength, not a weakness. Her growing sense of alienation did not stem from an inability to cope with programming but from her ability to handle it in a way that came into conflict with the computer culture she had entered.

Lisa wants to manipulate computer language the way she works with words as she writes a poem. There, she says, she "feels her way from one word to another," sculpting the whole. When she writes poetry, Lisa experiences language as transparent; she knows where all the elements are at every point in the development of her ideas. She wants her relationship to computer language to be similarly transparent. When she builds large programs she prefers to write her own smaller "building block" procedures even though she could use prepackaged ones from a program library; she resents the latter's opacity. Her teachers chide her, insisting that her demand for transparency is making her work more difficult; Lisa perseveres, insisting that this is what it takes for her to feel comfortable with computers.

Two months into the programming course, Lisa's efforts to succeed were no longer directed towards trying to feel comfortable. She had been told that the "right way" to do things was to control a program through planning and black-boxing, the technique that lets you exploit opacity to plan something large without knowing in advance how the details will be managed. Lisa recognized the value of these techniques -- for someone else. She struggled against using them as the starting points for her learning. Lisa ended up abandoning the fight, doing things "their way," and accepting the inevitable alienation from her work. It was at this point that she called her efforts to become "another kind of person with the machine" her "not-me strategy," and began to insist that the computer is "just a tool." "It's nothing much," she said, "just a tool."

A classmate, Robin, is a pianist. Robin explains that she masters her music by perfecting the smallest "little bits of pieces" and then building up. She cannot progress until she understands the details of each small part. Robin is happiest when she uses this tried and true method with the computer, playing with small computational elements as though they were notes or musical phrases. Like Lisa, she is frustrated with black-boxing or using prepackaged programs. She too was told her way was wrong: "I told my teaching fellow I wanted to take it all apart, and he laughed at me. He said it was a waste of time, that you should just black box, that you shouldn't confuse yourself with what was going on at that low level. "

Lisa and Robin came to the programming course with anxieties about not "belonging" (fearing that the computer belonged to male hackers who took the machines and made "a world apart"), and their experiences in it only served to make matters worse.7 Although imaginative and carefully designed, the Harvard course taught that there is only one right way to approach the computer, a way that emphasizes control through structure and planning. There are many virtues to this computational approach (it certainly makes sense when dividing the labor on a large programming project), but Lisa and Robin have intellectual styles at war with it. Lisa says she has "turned herself into a different kind of person" in order to perform, and Robin says she has learned to "fake it." Although both women are able to get good grades in their programming course, they represent casualties of this war. Both deny who they are in order to succeed.